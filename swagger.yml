openapi: 3.0.0
info:
  title: Sample API
  version: 0.1.9
paths:
  /organizations/{organizationId}/payments/{paymentId}:
    put:
      summary: Update a payment (can upsert)
      operationId: updatePayment
      tags:
        - payments
      parameters:
        - name: upsert
          in: query
          schema:
            type: boolean
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: path
          name: paymentId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentData'
      responses:
        '404':
          description: Document not found
        '201':
          description: Document was created
        '204':
          description: Document was updated
  /organizations/{organizationId}/payments:
    post:
      operationId: createPayment
      tags:
        - payments
      summary: Returns a list of payments.
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentData'
      responses:
        '201':
          description: A payment object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
    get:
      summary: Returns a list of payments.
      operationId: listPayments
      tags:
        - payments
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - name: limit
          in: query
          schema:
            type: integer
        - name: skip
          in: query
          schema:
            type: integer
        - name: sort
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':    # status code
          description: A JSON array of payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
components:
  schemas:
    Payment:
      allOf:
        - $ref: '#/components/schemas/PaymentData'
        - type: object
          properties:
            id:
              type: string
          required:
            - id
    PaymentData:
      type: object
      required:
        - provider
        - status
        - value
        - date
      properties:
        provider:
          type: string
        reference:
          type: string
        scheme:
          type: string
        status:
          type: string
        value:
          type: object
          required:
            - amount
            - asset
          properties:
            amount:
              type: integer
            asset:
              type: string
        date:
          type: string
          format: datetime
        raw:
          type: object
/*
Payments API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// Account struct for Account
type Account struct {
	Id        interface{} `json:"id"`
	CreatedAt interface{} `json:"createdAt"`
	Provider  interface{} `json:"provider"`
	Reference interface{} `json:"reference"`
	Type      interface{} `json:"type"`
}

// NewAccount instantiates a new Account object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccount(id interface{}, createdAt interface{}, provider interface{}, reference interface{}, type_ interface{}) *Account {
	this := Account{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Provider = provider
	this.Reference = reference
	this.Type = type_
	return &this
}

// NewAccountWithDefaults instantiates a new Account object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountWithDefaults() *Account {
	this := Account{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *Account) GetId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetIdOk() (*interface{}, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Account) SetId(v interface{}) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *Account) GetCreatedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetCreatedAtOk() (*interface{}, bool) {
	if o == nil || isNil(o.CreatedAt) {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Account) SetCreatedAt(v interface{}) {
	o.CreatedAt = v
}

// GetProvider returns the Provider field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *Account) GetProvider() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetProviderOk() (*interface{}, bool) {
	if o == nil || isNil(o.Provider) {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *Account) SetProvider(v interface{}) {
	o.Provider = v
}

// GetReference returns the Reference field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *Account) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetReferenceOk() (*interface{}, bool) {
	if o == nil || isNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// SetReference sets field value
func (o *Account) SetReference(v interface{}) {
	o.Reference = v
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *Account) GetType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetTypeOk() (*interface{}, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Account) SetType(v interface{}) {
	o.Type = v
}

func (o Account) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableAccount struct {
	value *Account
	isSet bool
}

func (v NullableAccount) Get() *Account {
	return v.value
}

func (v *NullableAccount) Set(val *Account) {
	v.value = val
	v.isSet = true
}

func (v NullableAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccount(val *Account) *NullableAccount {
	return &NullableAccount{value: val, isSet: true}
}

func (v NullableAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

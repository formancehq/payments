/*
Payments API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// TaskDescriptorModulrDescriptor struct for TaskDescriptorModulrDescriptor
type TaskDescriptorModulrDescriptor struct {
	Name      interface{} `json:"name,omitempty"`
	Key       interface{} `json:"key,omitempty"`
	AccountID interface{} `json:"accountID,omitempty"`
}

// NewTaskDescriptorModulrDescriptor instantiates a new TaskDescriptorModulrDescriptor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskDescriptorModulrDescriptor() *TaskDescriptorModulrDescriptor {
	this := TaskDescriptorModulrDescriptor{}
	return &this
}

// NewTaskDescriptorModulrDescriptorWithDefaults instantiates a new TaskDescriptorModulrDescriptor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskDescriptorModulrDescriptorWithDefaults() *TaskDescriptorModulrDescriptor {
	this := TaskDescriptorModulrDescriptor{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskDescriptorModulrDescriptor) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskDescriptorModulrDescriptor) GetNameOk() (*interface{}, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TaskDescriptorModulrDescriptor) HasName() bool {
	if o != nil && isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given interface{} and assigns it to the Name field.
func (o *TaskDescriptorModulrDescriptor) SetName(v interface{}) {
	o.Name = v
}

// GetKey returns the Key field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskDescriptorModulrDescriptor) GetKey() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskDescriptorModulrDescriptor) GetKeyOk() (*interface{}, bool) {
	if o == nil || isNil(o.Key) {
		return nil, false
	}
	return &o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *TaskDescriptorModulrDescriptor) HasKey() bool {
	if o != nil && isNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given interface{} and assigns it to the Key field.
func (o *TaskDescriptorModulrDescriptor) SetKey(v interface{}) {
	o.Key = v
}

// GetAccountID returns the AccountID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskDescriptorModulrDescriptor) GetAccountID() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AccountID
}

// GetAccountIDOk returns a tuple with the AccountID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskDescriptorModulrDescriptor) GetAccountIDOk() (*interface{}, bool) {
	if o == nil || isNil(o.AccountID) {
		return nil, false
	}
	return &o.AccountID, true
}

// HasAccountID returns a boolean if a field has been set.
func (o *TaskDescriptorModulrDescriptor) HasAccountID() bool {
	if o != nil && isNil(o.AccountID) {
		return true
	}

	return false
}

// SetAccountID gets a reference to the given interface{} and assigns it to the AccountID field.
func (o *TaskDescriptorModulrDescriptor) SetAccountID(v interface{}) {
	o.AccountID = v
}

func (o TaskDescriptorModulrDescriptor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.AccountID != nil {
		toSerialize["accountID"] = o.AccountID
	}
	return json.Marshal(toSerialize)
}

type NullableTaskDescriptorModulrDescriptor struct {
	value *TaskDescriptorModulrDescriptor
	isSet bool
}

func (v NullableTaskDescriptorModulrDescriptor) Get() *TaskDescriptorModulrDescriptor {
	return v.value
}

func (v *NullableTaskDescriptorModulrDescriptor) Set(val *TaskDescriptorModulrDescriptor) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskDescriptorModulrDescriptor) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskDescriptorModulrDescriptor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskDescriptorModulrDescriptor(val *TaskDescriptorModulrDescriptor) *NullableTaskDescriptorModulrDescriptor {
	return &NullableTaskDescriptorModulrDescriptor{value: val, isSet: true}
}

func (v NullableTaskDescriptorModulrDescriptor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskDescriptorModulrDescriptor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

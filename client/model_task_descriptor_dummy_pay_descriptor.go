/*
Payments API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// TaskDescriptorDummyPayDescriptor struct for TaskDescriptorDummyPayDescriptor
type TaskDescriptorDummyPayDescriptor struct {
	Name     interface{} `json:"name,omitempty"`
	Key      interface{} `json:"key,omitempty"`
	FileName interface{} `json:"fileName,omitempty"`
}

// NewTaskDescriptorDummyPayDescriptor instantiates a new TaskDescriptorDummyPayDescriptor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskDescriptorDummyPayDescriptor() *TaskDescriptorDummyPayDescriptor {
	this := TaskDescriptorDummyPayDescriptor{}
	return &this
}

// NewTaskDescriptorDummyPayDescriptorWithDefaults instantiates a new TaskDescriptorDummyPayDescriptor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskDescriptorDummyPayDescriptorWithDefaults() *TaskDescriptorDummyPayDescriptor {
	this := TaskDescriptorDummyPayDescriptor{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskDescriptorDummyPayDescriptor) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskDescriptorDummyPayDescriptor) GetNameOk() (*interface{}, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TaskDescriptorDummyPayDescriptor) HasName() bool {
	if o != nil && isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given interface{} and assigns it to the Name field.
func (o *TaskDescriptorDummyPayDescriptor) SetName(v interface{}) {
	o.Name = v
}

// GetKey returns the Key field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskDescriptorDummyPayDescriptor) GetKey() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskDescriptorDummyPayDescriptor) GetKeyOk() (*interface{}, bool) {
	if o == nil || isNil(o.Key) {
		return nil, false
	}
	return &o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *TaskDescriptorDummyPayDescriptor) HasKey() bool {
	if o != nil && isNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given interface{} and assigns it to the Key field.
func (o *TaskDescriptorDummyPayDescriptor) SetKey(v interface{}) {
	o.Key = v
}

// GetFileName returns the FileName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskDescriptorDummyPayDescriptor) GetFileName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskDescriptorDummyPayDescriptor) GetFileNameOk() (*interface{}, bool) {
	if o == nil || isNil(o.FileName) {
		return nil, false
	}
	return &o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *TaskDescriptorDummyPayDescriptor) HasFileName() bool {
	if o != nil && isNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given interface{} and assigns it to the FileName field.
func (o *TaskDescriptorDummyPayDescriptor) SetFileName(v interface{}) {
	o.FileName = v
}

func (o TaskDescriptorDummyPayDescriptor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.FileName != nil {
		toSerialize["fileName"] = o.FileName
	}
	return json.Marshal(toSerialize)
}

type NullableTaskDescriptorDummyPayDescriptor struct {
	value *TaskDescriptorDummyPayDescriptor
	isSet bool
}

func (v NullableTaskDescriptorDummyPayDescriptor) Get() *TaskDescriptorDummyPayDescriptor {
	return v.value
}

func (v *NullableTaskDescriptorDummyPayDescriptor) Set(val *TaskDescriptorDummyPayDescriptor) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskDescriptorDummyPayDescriptor) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskDescriptorDummyPayDescriptor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskDescriptorDummyPayDescriptor(val *TaskDescriptorDummyPayDescriptor) *NullableTaskDescriptorDummyPayDescriptor {
	return &NullableTaskDescriptorDummyPayDescriptor{value: val, isSet: true}
}

func (v NullableTaskDescriptorDummyPayDescriptor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskDescriptorDummyPayDescriptor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

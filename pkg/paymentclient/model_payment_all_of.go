/*
Sample API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentclient

import (
	"encoding/json"
)

// PaymentAllOf struct for PaymentAllOf
type PaymentAllOf struct {
	OrganizationId string `json:"organizationId"`
}

// NewPaymentAllOf instantiates a new PaymentAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentAllOf(organizationId string) *PaymentAllOf {
	this := PaymentAllOf{}
	this.OrganizationId = organizationId
	return &this
}

// NewPaymentAllOfWithDefaults instantiates a new PaymentAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentAllOfWithDefaults() *PaymentAllOf {
	this := PaymentAllOf{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value
func (o *PaymentAllOf) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *PaymentAllOf) GetOrganizationIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *PaymentAllOf) SetOrganizationId(v string) {
	o.OrganizationId = v
}

func (o PaymentAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["organizationId"] = o.OrganizationId
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentAllOf struct {
	value *PaymentAllOf
	isSet bool
}

func (v NullablePaymentAllOf) Get() *PaymentAllOf {
	return v.value
}

func (v *NullablePaymentAllOf) Set(val *PaymentAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentAllOf(val *PaymentAllOf) *NullablePaymentAllOf {
	return &NullablePaymentAllOf{value: val, isSet: true}
}

func (v NullablePaymentAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



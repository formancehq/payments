// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/payments/pkg/client/internal/utils"
	"github.com/formancehq/payments/pkg/client/models/components"
	"time"
)

type GetAccountBalancesRequest struct {
	// The account ID.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
	// The maximum number of results to return per page.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Filter balances by currency.
	// If not specified, all account's balances will be returned.
	//
	Asset *string `queryParam:"style=form,explode=true,name=asset"`
	// Filter balances by date.
	// If not specified, all account's balances will be returned.
	//
	From *time.Time `queryParam:"style=form,explode=true,name=from"`
	// Filter balances by date.
	// If not specified, default will be set to now.
	//
	To *time.Time `queryParam:"style=form,explode=true,name=to"`
	// The maximum number of results to return per page.
	//
	PageSize *int64 `default:"15" queryParam:"style=form,explode=true,name=pageSize"`
	// Parameter used in pagination requests. Maximum page size is set to 15.
	// Set to the value of next for the next page of results.
	// Set to the value of previous for the previous page of results.
	// No other parameters can be set when this parameter is set.
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Fields used to sort payments (default is date:desc).
	Sort []string `queryParam:"style=form,explode=true,name=sort"`
}

func (g GetAccountBalancesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetAccountBalancesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetAccountBalancesRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *GetAccountBalancesRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetAccountBalancesRequest) GetAsset() *string {
	if o == nil {
		return nil
	}
	return o.Asset
}

func (o *GetAccountBalancesRequest) GetFrom() *time.Time {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *GetAccountBalancesRequest) GetTo() *time.Time {
	if o == nil {
		return nil
	}
	return o.To
}

func (o *GetAccountBalancesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *GetAccountBalancesRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *GetAccountBalancesRequest) GetSort() []string {
	if o == nil {
		return nil
	}
	return o.Sort
}

type GetAccountBalancesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	BalancesCursor *components.BalancesCursor
	// Error
	PaymentsErrorResponse *components.PaymentsErrorResponse
}

func (o *GetAccountBalancesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetAccountBalancesResponse) GetBalancesCursor() *components.BalancesCursor {
	if o == nil {
		return nil
	}
	return o.BalancesCursor
}

func (o *GetAccountBalancesResponse) GetPaymentsErrorResponse() *components.PaymentsErrorResponse {
	if o == nil {
		return nil
	}
	return o.PaymentsErrorResponse
}

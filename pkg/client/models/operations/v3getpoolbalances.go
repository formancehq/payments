// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/payments/pkg/client/internal/utils"
	"github.com/formancehq/payments/pkg/client/models/components"
	"time"
)

type V3GetPoolBalancesRequest struct {
	// The pool ID
	PoolID string `pathParam:"style=simple,explode=false,name=poolID"`
	// The time to filter by
	At *time.Time `queryParam:"style=form,explode=true,name=at"`
}

func (v V3GetPoolBalancesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3GetPoolBalancesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *V3GetPoolBalancesRequest) GetPoolID() string {
	if o == nil {
		return ""
	}
	return o.PoolID
}

func (o *V3GetPoolBalancesRequest) GetAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.At
}

type V3GetPoolBalancesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	V3PoolBalancesResponse *components.V3PoolBalancesResponse
	// Error
	V3ErrorResponse *components.V3ErrorResponse
}

func (o *V3GetPoolBalancesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *V3GetPoolBalancesResponse) GetV3PoolBalancesResponse() *components.V3PoolBalancesResponse {
	if o == nil {
		return nil
	}
	return o.V3PoolBalancesResponse
}

func (o *V3GetPoolBalancesResponse) GetV3ErrorResponse() *components.V3ErrorResponse {
	if o == nil {
		return nil
	}
	return o.V3ErrorResponse
}

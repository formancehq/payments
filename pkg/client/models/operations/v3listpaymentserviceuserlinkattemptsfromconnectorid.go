// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/payments/pkg/client/models/components"
)

type V3ListPaymentServiceUserLinkAttemptsFromConnectorIDRequest struct {
	// The payment service user ID
	PaymentServiceUserID string `pathParam:"style=simple,explode=false,name=paymentServiceUserID"`
	// The connector ID
	ConnectorID string `pathParam:"style=simple,explode=false,name=connectorID"`
	// The number of items to return
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Parameter used in pagination requests. Set to the value of next for the next page of results. Set to the value of previous for the previous page of results. No other parameters can be set when this parameter is set.
	//
	Cursor      *string        `queryParam:"style=form,explode=true,name=cursor"`
	RequestBody map[string]any `request:"mediaType=application/json"`
}

func (o *V3ListPaymentServiceUserLinkAttemptsFromConnectorIDRequest) GetPaymentServiceUserID() string {
	if o == nil {
		return ""
	}
	return o.PaymentServiceUserID
}

func (o *V3ListPaymentServiceUserLinkAttemptsFromConnectorIDRequest) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *V3ListPaymentServiceUserLinkAttemptsFromConnectorIDRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *V3ListPaymentServiceUserLinkAttemptsFromConnectorIDRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *V3ListPaymentServiceUserLinkAttemptsFromConnectorIDRequest) GetRequestBody() map[string]any {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type V3ListPaymentServiceUserLinkAttemptsFromConnectorIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	V3PaymentServiceUserLinkAttemptsCursorResponse *components.V3PaymentServiceUserLinkAttemptsCursorResponse
	// Error
	V3ErrorResponse *components.V3ErrorResponse
}

func (o *V3ListPaymentServiceUserLinkAttemptsFromConnectorIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *V3ListPaymentServiceUserLinkAttemptsFromConnectorIDResponse) GetV3PaymentServiceUserLinkAttemptsCursorResponse() *components.V3PaymentServiceUserLinkAttemptsCursorResponse {
	if o == nil {
		return nil
	}
	return o.V3PaymentServiceUserLinkAttemptsCursorResponse
}

func (o *V3ListPaymentServiceUserLinkAttemptsFromConnectorIDResponse) GetV3ErrorResponse() *components.V3ErrorResponse {
	if o == nil {
		return nil
	}
	return o.V3ErrorResponse
}

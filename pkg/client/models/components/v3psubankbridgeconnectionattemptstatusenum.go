// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type V3PSUBankBridgeConnectionAttemptStatusEnum string

const (
	V3PSUBankBridgeConnectionAttemptStatusEnumPending   V3PSUBankBridgeConnectionAttemptStatusEnum = "pending"
	V3PSUBankBridgeConnectionAttemptStatusEnumCompleted V3PSUBankBridgeConnectionAttemptStatusEnum = "completed"
	V3PSUBankBridgeConnectionAttemptStatusEnumExited    V3PSUBankBridgeConnectionAttemptStatusEnum = "exited"
)

func (e V3PSUBankBridgeConnectionAttemptStatusEnum) ToPointer() *V3PSUBankBridgeConnectionAttemptStatusEnum {
	return &e
}
func (e *V3PSUBankBridgeConnectionAttemptStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "completed":
		fallthrough
	case "exited":
		*e = V3PSUBankBridgeConnectionAttemptStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3PSUBankBridgeConnectionAttemptStatusEnum: %v", v)
	}
}

// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/formancehq/payments/pkg/client/internal/utils"
	"time"
)

type AccountRaw struct {
}

type Account struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"createdAt"`
	Reference   string    `json:"reference"`
	ConnectorID string    `json:"connectorID"`
	Provider    *string   `json:"provider,omitempty"`
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	DefaultCurrency string            `json:"defaultCurrency"`
	DefaultAsset    string            `json:"defaultAsset"`
	AccountName     string            `json:"accountName"`
	Type            AccountType       `json:"type"`
	Pools           []string          `json:"pools,omitempty"`
	Metadata        map[string]string `json:"metadata"`
	Raw             *AccountRaw       `json:"raw"`
}

func (a Account) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *Account) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Account) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Account) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *Account) GetReference() string {
	if o == nil {
		return ""
	}
	return o.Reference
}

func (o *Account) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *Account) GetProvider() *string {
	if o == nil {
		return nil
	}
	return o.Provider
}

func (o *Account) GetDefaultCurrency() string {
	if o == nil {
		return ""
	}
	return o.DefaultCurrency
}

func (o *Account) GetDefaultAsset() string {
	if o == nil {
		return ""
	}
	return o.DefaultAsset
}

func (o *Account) GetAccountName() string {
	if o == nil {
		return ""
	}
	return o.AccountName
}

func (o *Account) GetType() AccountType {
	if o == nil {
		return AccountType("")
	}
	return o.Type
}

func (o *Account) GetPools() []string {
	if o == nil {
		return nil
	}
	return o.Pools
}

func (o *Account) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *Account) GetRaw() *AccountRaw {
	if o == nil {
		return nil
	}
	return o.Raw
}

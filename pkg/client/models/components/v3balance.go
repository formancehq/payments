// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/formancehq/payments/pkg/client/internal/utils"
	"math/big"
	"time"
)

type V3Balance struct {
	AccountID     string    `json:"accountID"`
	CreatedAt     time.Time `json:"createdAt"`
	LastUpdatedAt time.Time `json:"lastUpdatedAt"`
	Asset         string    `json:"asset"`
	Balance       *big.Int  `json:"balance"`
}

func (v V3Balance) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3Balance) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *V3Balance) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *V3Balance) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *V3Balance) GetLastUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.LastUpdatedAt
}

func (o *V3Balance) GetAsset() string {
	if o == nil {
		return ""
	}
	return o.Asset
}

func (o *V3Balance) GetBalance() *big.Int {
	if o == nil {
		return big.NewInt(0)
	}
	return o.Balance
}

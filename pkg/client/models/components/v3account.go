// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/formancehq/payments/pkg/client/internal/utils"
	"time"
)

type V3AccountRaw struct {
}

type V3Account struct {
	ID           string            `json:"id"`
	ConnectorID  string            `json:"connectorID"`
	Connector    *V3ConnectorBase  `json:"connector,omitempty"`
	Provider     string            `json:"provider"`
	Reference    string            `json:"reference"`
	CreatedAt    time.Time         `json:"createdAt"`
	Type         V3AccountTypeEnum `json:"type"`
	Name         *string           `json:"name,omitempty"`
	DefaultAsset *string           `json:"defaultAsset,omitempty"`
	Metadata     map[string]string `json:"metadata,omitempty"`
	Raw          V3AccountRaw      `json:"raw"`
}

func (v V3Account) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3Account) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *V3Account) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *V3Account) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *V3Account) GetConnector() *V3ConnectorBase {
	if o == nil {
		return nil
	}
	return o.Connector
}

func (o *V3Account) GetProvider() string {
	if o == nil {
		return ""
	}
	return o.Provider
}

func (o *V3Account) GetReference() string {
	if o == nil {
		return ""
	}
	return o.Reference
}

func (o *V3Account) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *V3Account) GetType() V3AccountTypeEnum {
	if o == nil {
		return V3AccountTypeEnum("")
	}
	return o.Type
}

func (o *V3Account) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *V3Account) GetDefaultAsset() *string {
	if o == nil {
		return nil
	}
	return o.DefaultAsset
}

func (o *V3Account) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *V3Account) GetRaw() V3AccountRaw {
	if o == nil {
		return V3AccountRaw{}
	}
	return o.Raw
}

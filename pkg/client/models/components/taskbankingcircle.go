// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/formancehq/payments/pkg/client/internal/utils"
	"time"
)

type TaskBankingCircleState struct {
}

type TaskBankingCircleDescriptor struct {
	Name *string `json:"name,omitempty"`
	Key  *string `json:"key,omitempty"`
}

func (o *TaskBankingCircleDescriptor) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TaskBankingCircleDescriptor) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

type TaskBankingCircle struct {
	ID          string                      `json:"id"`
	ConnectorID string                      `json:"connectorID"`
	CreatedAt   time.Time                   `json:"createdAt"`
	UpdatedAt   time.Time                   `json:"updatedAt"`
	Status      TaskStatus                  `json:"status"`
	State       *TaskBankingCircleState     `json:"state,omitempty"`
	Error       *string                     `json:"error,omitempty"`
	Descriptor  TaskBankingCircleDescriptor `json:"descriptor"`
}

func (t TaskBankingCircle) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaskBankingCircle) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *TaskBankingCircle) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *TaskBankingCircle) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *TaskBankingCircle) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *TaskBankingCircle) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *TaskBankingCircle) GetStatus() TaskStatus {
	if o == nil {
		return TaskStatus("")
	}
	return o.Status
}

func (o *TaskBankingCircle) GetState() *TaskBankingCircleState {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *TaskBankingCircle) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *TaskBankingCircle) GetDescriptor() TaskBankingCircleDescriptor {
	if o == nil {
		return TaskBankingCircleDescriptor{}
	}
	return o.Descriptor
}

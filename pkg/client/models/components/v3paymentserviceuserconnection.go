// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/formancehq/payments/pkg/client/internal/utils"
	"time"
)

type V3PaymentServiceUserConnection struct {
	ConnectionID  string                 `json:"connectionID"`
	ConnectorID   string                 `json:"connectorID"`
	CreatedAt     time.Time              `json:"createdAt"`
	DataUpdatedAt time.Time              `json:"dataUpdatedAt"`
	Status        V3ConnectionStatusEnum `json:"status"`
	Error         *string                `json:"error,omitempty"`
	Metadata      map[string]string      `json:"metadata,omitempty"`
}

func (v V3PaymentServiceUserConnection) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3PaymentServiceUserConnection) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *V3PaymentServiceUserConnection) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *V3PaymentServiceUserConnection) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *V3PaymentServiceUserConnection) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *V3PaymentServiceUserConnection) GetDataUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.DataUpdatedAt
}

func (o *V3PaymentServiceUserConnection) GetStatus() V3ConnectionStatusEnum {
	if o == nil {
		return V3ConnectionStatusEnum("")
	}
	return o.Status
}

func (o *V3PaymentServiceUserConnection) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *V3PaymentServiceUserConnection) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

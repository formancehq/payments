// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/formancehq/payments/pkg/client/internal/utils"
	"math/big"
	"time"
)

type V3PaymentAdjustmentRaw struct {
}

type V3PaymentAdjustment struct {
	ID        string                 `json:"id"`
	Reference string                 `json:"reference"`
	CreatedAt time.Time              `json:"createdAt"`
	Status    V3PaymentStatusEnum    `json:"status"`
	Amount    *big.Int               `json:"amount,omitempty"`
	Asset     *string                `json:"asset,omitempty"`
	Metadata  map[string]string      `json:"metadata,omitempty"`
	Raw       V3PaymentAdjustmentRaw `json:"raw"`
}

func (v V3PaymentAdjustment) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3PaymentAdjustment) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *V3PaymentAdjustment) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *V3PaymentAdjustment) GetReference() string {
	if o == nil {
		return ""
	}
	return o.Reference
}

func (o *V3PaymentAdjustment) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *V3PaymentAdjustment) GetStatus() V3PaymentStatusEnum {
	if o == nil {
		return V3PaymentStatusEnum("")
	}
	return o.Status
}

func (o *V3PaymentAdjustment) GetAmount() *big.Int {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *V3PaymentAdjustment) GetAsset() *string {
	if o == nil {
		return nil
	}
	return o.Asset
}

func (o *V3PaymentAdjustment) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *V3PaymentAdjustment) GetRaw() V3PaymentAdjustmentRaw {
	if o == nil {
		return V3PaymentAdjustmentRaw{}
	}
	return o.Raw
}

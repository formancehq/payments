volumes:
  postgres: {}
  temporal: {}

services:

  postgres:
    image: "postgres:16-alpine"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ledger"]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - -c
      - max_connections=200
      - -c
      - log_min_messages=info
    environment:
      POSTGRES_USER: "ledger"
      POSTGRES_PASSWORD: "ledger"
      POSTGRES_DB: "ledger"
      PGDATA: /data/postgres
    volumes:
      - ${POSTGRES_DATA:-postgres}:/data/postgres

  worker:
    image: ghcr.io/formancehq/ledger:v2.3.0
    # entrypoint:
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DEBUG: "${DEBUG:-false}"
      POSTGRES_URI: "postgresql://ledger:ledger@postgres/ledger?sslmode=disable"
      POSTGRES_MAX_OPEN_CONNS: "40"
      POSTGRES_MAX_IDLE_CONNS: "40"
      POSTGRES_CONN_MAX_IDLE_TIME: "5m"

  ledger:
    image: ghcr.io/formancehq/ledger:v2.3.0
    ports:
      - 3068:3068
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DEBUG: "${DEBUG:-false}"
      POSTGRES_URI: "postgresql://ledger:ledger@postgres/ledger?sslmode=disable"
      POSTGRES_MAX_OPEN_CONNS: "40"
      POSTGRES_MAX_IDLE_CONNS: "40"
      POSTGRES_CONN_MAX_IDLE_TIME: "5m"
      EXPERIMENTAL_FEATURES: "true"
      AUTO_UPGRADE: "true"
      BULK_PARALLEL: "10"

  gateway:
    image: ghcr.io/formancehq/gateway:v2.0.31
    depends_on:
      ledger:
        condition: service_started
      payments:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./Caddyfile:/etc/caddy/Caddyfile"

  temporal:
    image: temporalio/auto-setup:1.25.0
    healthcheck:
      test: ["CMD", "tctl", "--address", "temporal:7233", "cluster", "health"]
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=ledger
      - POSTGRES_PWD=ledger
      - POSTGRES_SEEDS=postgres
    ports:
      - "7233:7233"
    volumes:
      - temporal:/etc/temporal

  payments-migrate:
    image: ghcr.io/formancehq/payments:latest
    command:
      - migrate
      - up
      - --postgres-uri=postgresql://ledger:ledger@postgres/ledger?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      CONFIG_ENCRYPTION_KEY: "myencryptionkeymyencryptionkey"

  payments:
    image: ghcr.io/formancehq/payments:latest
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8080/_healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      temporal:
        condition: service_healthy
      payments-migrate:
        condition: service_completed_successfully
    environment:
      DEBUG: "${DEBUG:-false}"
      POSTGRES_URI: "postgresql://ledger:ledger@postgres/ledger?sslmode=disable"
      TEMPORAL_ADDRESS: "temporal:7233"
      TEMPORAL_NAMESPACE: "default"
      PUBLISHER_TOPIC_NAME: "payments"
      TEMPORAL_INIT_SEARCH_ATTRIBUTES: true
      CONFIG_ENCRYPTION_KEY: "myencryptionkeymyencryptionkey"
    ports:
      - "8080:8080"

  console:
    image: ghcr.io/formancehq/console-v3:d924bd604af772041acba7a116528a1b02915e4d
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - MICRO_STACK=1
      - API_URL=http://gateway:80/api
      - COOKIE_SECRET=secret
      - COOKIE_DOMAIN=localhost
    depends_on:
      - postgres
      - worker
      - ledger
      - gateway

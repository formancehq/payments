// Code generated by MockGen. DO NOT EDIT.
// Source: webhook.go
//
// Generated by this command:
//
//	mockgen -source webhook.go -destination webhookverifier_generated.go -package column WebhookVerifier
//

// Package column is a generated GoMock package.
package column

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockWebhookVerifier is a mock of WebhookVerifier interface.
type MockWebhookVerifier struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookVerifierMockRecorder
	isgomock struct{}
}

// MockWebhookVerifierMockRecorder is the mock recorder for MockWebhookVerifier.
type MockWebhookVerifierMockRecorder struct {
	mock *MockWebhookVerifier
}

// NewMockWebhookVerifier creates a new mock instance.
func NewMockWebhookVerifier(ctrl *gomock.Controller) *MockWebhookVerifier {
	mock := &MockWebhookVerifier{ctrl: ctrl}
	mock.recorder = &MockWebhookVerifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookVerifier) EXPECT() *MockWebhookVerifierMockRecorder {
	return m.recorder
}

// verifyWebhookSignature mocks base method.
func (m *MockWebhookVerifier) verifyWebhookSignature(payload []byte, header, secret string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "verifyWebhookSignature", payload, header, secret)
	ret0, _ := ret[0].(error)
	return ret0
}

// verifyWebhookSignature indicates an expected call of verifyWebhookSignature.
func (mr *MockWebhookVerifierMockRecorder) verifyWebhookSignature(payload, header, secret any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "verifyWebhookSignature", reflect.TypeOf((*MockWebhookVerifier)(nil).verifyWebhookSignature), payload, header, secret)
}

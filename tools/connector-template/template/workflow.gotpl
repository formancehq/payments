package {{.Connector}}

import "github.com/formancehq/payments/internal/models"

func workflow() models.ConnectorTasksTree {
    // In here, you will have to define how you want your connector's data
    // to be polled. Some data maybe depends on some others, so this method
    // is here to define that.
    //
    // Example 1:
	// return []models.ConnectorTaskTree{
	// 	{
	// 		TaskType:     models.TASK_FETCH_ACCOUNTS,
	// 		Name:         "fetch_accounts",
	// 		Periodically: true,
	// 		NextTasks: []models.ConnectorTaskTree{
	// 			{
	// 				TaskType:     models.TASK_FETCH_BALANCES,
	// 				Name:         "fetch_balances",
	// 				Periodically: true,
	// 				NextTasks:    []models.ConnectorTaskTree{},
	// 			},
	// 			{
	// 				TaskType:     models.TASK_FETCH_PAYMENTS,
	// 				Name:         "fetch_payments",
	// 				Periodically: true,
	// 				NextTasks:    []models.ConnectorTaskTree{},
	// 			},
	// 			{
	// 				TaskType:     models.TASK_FETCH_EXTERNAL_ACCOUNTS,
	// 				Name:         "fetch_recipients",
	// 				Periodically: true,
	// 				NextTasks:    []models.ConnectorTaskTree{},
	// 			},
	// 		},
	// 	},
	// }
    // In this example, the FetchNextAccounts method will be called first and
    // then periodically.
    // For each accounts returned by this method, FetchNextBalances,
    // FetchNextPayments and FetchNextExternalAccounts will then be called
    // with the related account in the request's FromPayload field and then
    // periodically.
    //
    // Example 2:
    // return []models.ConnectorTaskTree{
	// 	{
    //
	// 		TaskType:     models.TASK_FETCH_ACCOUNTS,
	// 		Name:         "fetch_accounts",
	// 		Periodically: true,
	// 		NextTasks: []models.ConnectorTaskTree{
	// 			{
	// 				TaskType:     models.TASK_FETCH_BALANCES,
	// 				Name:         "fetch_balances",
	// 				Periodically: true,
	// 				NextTasks:    []models.ConnectorTaskTree{},
	// 			},
	// 		},
	// 	},
	// 	{
	// 		TaskType:  models.TASK_FETCH_PAYMENTS,
	// 		Name:      "fetch_payments",
	// 		NextTasks: []models.ConnectorTaskTree{},
	// 	},
    //
	// 	{
	// 		TaskType:     models.TASK_FETCH_EXTERNAL_ACCOUNTS,
	// 		Name:         "fetch_external_accounts",
	// 		Periodically: true,
	// 		NextTasks:    []models.ConnectorTaskTree{},
	// 	},
	// }
    // In this example, FetchNextAccounts, FetchNextPayments and
    // FetchNextExternalAccounts will be called in parallel and periodically.
    // For every accounts returned in FetchNextAccounts, the FetchNextBalances
    // method will be called periodically.

    return []models.ConnectorTaskTree{}
}
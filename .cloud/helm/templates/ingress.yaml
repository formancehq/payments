{{- if eq .Values.env "dev" }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: api.{{ .Values.ephemeralName }}.{{ .Values.env }}.numary.cloud
spec:
  secretName: api.{{ .Values.ephemeralName }}.{{ .Values.env }}.numary.cloud
  dnsNames:
    - api.{{ .Values.ephemeralName }}.{{ .Values.env }}.numary.cloud
  issuerRef:
    name: r53-letsencrypt-prod
    kind: ClusterIssuer
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Values.serviceName }}-svc
spec:
  entryPoints:
    - web
    - websecure
  tls:
    secretName: api.{{ .Values.ephemeralName }}.{{ .Values.env }}.numary.cloud
  routes:
    - kind: Rule
      match: Host(`api.{{ .Values.ephemeralName }}.{{ .Values.env }}.numary.cloud`) && PathPrefix(`/payments`)
      middlewares:
        - name: redirect-https
          namespace: ingress
        - name: cors-all
          namespace: ingress
        - name: {{ .Values.serviceName }}-stripprefix
          namespace: "{{ .Release.Namespace }}"
      services:
        - name: {{ .Values.serviceName }}
          port: 80
{{- else }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "{{ .Values.global.exposeUrl }}"
spec:
  secretName: "{{ .Values.global.exposeUrl }}"
  dnsNames:
    - "{{ .Values.global.exposeUrl }}"
  issuerRef:
    name: r53-letsencrypt-prod
    kind: ClusterIssuer
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Values.serviceName }}-svc
spec:
  entryPoints:
    - web
    - websecure
  tls:
    secretName: "{{ .Values.global.exposeUrl }}"
  routes:
    - kind: Rule
      match: Host(`{{ .Values.global.exposeUrl}}`) && PathPrefix(`/payments`)
      middlewares:
        - name: redirect-https
          namespace: ingress
        - name: cors-all
          namespace: ingress
        - name: {{ .Values.serviceName }}-stripprefix
          namespace: "{{ .Release.Namespace }}"
      services:
        - name: {{ .Values.serviceName }}
          port: 80
{{- end }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ .Values.serviceName }}-stripprefix
spec:
  stripPrefix:
    prefixes:
      - /{{ .Values.serviceName }}